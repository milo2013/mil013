
/* Load the SQL Table into your Database

CREATE TABLE IF NOT EXISTS `e_market` (
  `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  
  `npc_id` SMALLINT(5) UNSIGNED NOT NULL DEFAULT '0',
  `header` VARCHAR(50) NOT NULL DEFAULT 'MARKET',
  `owner_id` INT(11) UNSIGNED NOT NULL DEFAULT '0',
  `currency` INT(11) NOT NULL DEFAULT '0',
  `cost` INT(11) UNSIGNED NOT NULL DEFAULT '0',
  `expire` int(11) unsigned NOT NULL default '0',
  
  `nameid` SMALLINT(5) UNSIGNED NOT NULL DEFAULT '0',
  `amount` INT(11) UNSIGNED NOT NULL DEFAULT '0',
  `refine` TINYINT(3) UNSIGNED NOT NULL DEFAULT '0',
  `card0` SMALLINT(5) UNSIGNED NOT NULL DEFAULT '0',
  `card1` SMALLINT(5) UNSIGNED NOT NULL DEFAULT '0',
  `card2` SMALLINT(5) UNSIGNED NOT NULL DEFAULT '0',
  `card3` SMALLINT(5) UNSIGNED NOT NULL DEFAULT '0',
  
  `status` TINYINT(4) UNSIGNED NOT NULL DEFAULT '1',
  `last_edit` int(11) unsigned NOT NULL default '0',
  `buyer_id` INT(11) UNSIGNED NOT NULL DEFAULT '0',
  
  PRIMARY KEY (`id`)
) ENGINE=MyISAM;

*/

/*
	StatusID
	0 - Maintenance
	1 - Selling/Available
	2 - Expired + not collected
	3 - Sold + not collected
	4 - Returned items/sales to owner
*/


-	script	market_npc_main	-1,{
	function func_Item;
	function func_Item_Card;
	function func_Currency_Show;
	function func_Currency_Check;
	function func_Currency_Pay;
	function func_Currency_Retrieve;
	
	OnTalk:
		.@npc_id = atoi( strnpcinfo(2) );
		.@gettimetick = gettimetick(2);
		.@aid = getcharid(3);
		.@npc_name$ = strnpcinfo(3);
		
		disable_items;
		if ( .@npc_id <= 0 ) {
			mes "Invalid shop.";
		}
		else {
			
			deltimer .@npc_name$+"::OnClearData";
			addtimer 1000,.@npc_name$+"::OnClearData";
			
			.@sql$ = "SELECT `header`,`owner_id`,`currency`"
				+ " FROM `e_market`"
				+ " WHERE `npc_id` = "+.@npc_id
				+ " AND `status` < 2"
				+ " AND `expire` > "+.@gettimetick
				+ " LIMIT 1";
			query_sql( .@sql$, .@header$, .@owner_id, .@currency );
			
			.@sql$ = "SELECT `id`, ( `cost` * `amount` ),`nameid`,`amount`,`refine`,`card0`,`card1`,`card2`,`card3`,`last_edit` "
				+ " FROM `e_market`"
				+ " WHERE `npc_id` = "+.@npc_id
				+ " AND `status` < 2"
				+ " AND `nameid` > 0"
				+ " AND `amount` > 0"
				+ " AND `cost` > 0"
				+ " AND `expire` > "+.@gettimetick
				+ " LIMIT "+.max_item;
			query_sql( .@sql$, .@id, .@cost, .@nameid, .@amount, .@refine, .@card0, .@card1, .@card2, .@card3, .@last_edit );
			.@id_size = getarraysize( .@id );
			
			for ( .@i = 0; .@i < .@id_size; .@i++ ) {
				.@menu$ = .@menu$ + "["+( .@i + 1 )+".] " + func_Item( .@nameid[.@i],.@amount[.@i],.@refine[.@i],.@card0[.@i],.@card1[.@i],.@card2[.@i],.@card3[.@i] ) + " - cost " + F_InsertComma( .@cost[.@i] ) + ":";
			}
					
			if ( .@owner_id ) {
				mes "^FF0000["+.@header$+"]^000000";
				mes "Consist "+.@id_size+" item(s)";
				mes " ";
				mes "Currency: "+func_Currency_Show( .@currency );
			}
			else {
				mes "Would you like to open a shop ?";
			}
			next;
			switch ( select( 
				( .@id_size > 0 ) ? "Visit Shop" : "",
				( .@owner_id <= 0 ) ? "Create Shop" : "",
				"Collect Item/Sales",
				"Information"
			)) {
				case 1:
					do {
						mes "^FF0000["+.@header$+"]^000000";
						mes "Pick an Item to view.";
						mes "Consist "+.@id_size+" item(s)";
						mes " ";
						mes "Currency: "+func_Currency_Show( .@currency );
						
						.@i = select( .@menu$ ) - 1;
						next;
						mes "^FF0000["+.@header$+"]^000000";
						mes func_Item( .@nameid[.@i],.@amount[.@i],.@refine[.@i],.@card0[.@i],.@card1[.@i],.@card2[.@i],.@card3[.@i] );
						func_Item_Card( .@card0[.@i],.@card1[.@i],.@card2[.@i],.@card3[.@i] );
						mes " ";
						if ( .@amount[.@i] > 1 )
							mes "Cost per Unit: "+F_InsertComma( .@cost[.@i] / .@amount[.@i] )+" x "+func_Currency_Show( .@currency );
						mes "Total Cost: "+F_InsertComma( .@cost[.@i] )+" x "+func_Currency_Show( .@currency );
						mes " ";
						if ( select( 
							( .@owner_id && .@owner_id != .@aid ) ? "Buy "+func_Item( .@nameid[.@i],.@amount[.@i],.@refine[.@i],.@card0[.@i],.@card1[.@i],.@card2[.@i],.@card3[.@i] ) : "",
							"Back" 
						) == 1 ) {
							if ( select( "Confirm Purchase","Back" ) == 1 ) {
								query_sql( "SELECT `id`,`last_edit`,`status` FROM `e_market` WHERE `id` = "+.@id[.@i]+" LIMIT 1",.@new_id,.@new_edit,.@new_status );
								
								if ( !.@new_id || .@new_edit > .@last_edit[.@i] || .@new_status != 1 ) {
									mes "Item has been updated, please recheck the shop for latest items.";
								}
								else if ( func_Currency_Check( .@currency,.@cost[.@i] ) ) {
									.@gettimetick = gettimetick(2);
									query_sql( "UPDATE `e_market` SET `buyer_id` = "+.@aid+", `status` = 3, `last_edit` = "+.@gettimetick+" WHERE `id` = "+.@new_id+" AND `last_edit` = "+.@new_edit );
									func_Currency_Pay( .@currency,.@cost[.@i] );
									getitem2 .@nameid[.@i],.@amount[.@i],1,.@refine[.@i],0,.@card0[.@i],.@card1[.@i],.@card2[.@i],.@card3[.@i];
									mes "Purchased "+func_Item( .@nameid[.@i],.@amount[.@i],.@refine[.@i],.@card0[.@i],.@card1[.@i],.@card2[.@i],.@card3[.@i] );
									donpcevent .@npc_name$+"::OnCreateHeader";
									close;
								}
								else {
									mes "Insufficient fund.";
								}
							}
						}
						next;
					} while ( 1 );
					break;
				case 2:
					mes "[ ^FF0000WARNING^000000 ]";
					mes "Don't sell these items:";
					mes " ~ item with extra bonus, rental or bounded.";
					mes " ~ store same item in storage to avoid selling wrong item";
					mes " ";
					.@setup_header$ = "New Shop - "+strcharinfo(0);
					query_sql( "SELECT `owner_id` FROM `e_market` WHERE `npc_id` = "+.@npc_id+" AND `status` < 2 LIMIT 1",.@current_owner_id );
					query_sql( "SELECT `npc_id` FROM `e_market` WHERE `owner_id` = "+.@aid+" AND `status` < 2 AND `nameid` > 0 AND `amount` > 0 LIMIT 1",.@current_npc_id );
					
					if ( .@current_npc_id && .@current_npc_id != .@npc_id ) {
						mes "You already create a shop from another NPC. Close it before you can open a new shop.";
						break;
					}
					else if ( .@current_owner_id && .@current_owner_id != .@aid ) {
						mes "You're too late, someone already opened a shop before you.";
						break;
					}
					else if ( !.@current_owner_id ) {
						query_sql( "INSERT INTO `e_market` ( `npc_id`,`header`,`owner_id`,`expire` ) VALUES ( "+.@npc_id+", '"+escape_sql( .@setup_header$ )+"', "+.@aid+", "+( gettimetick(2) + 600 )+" )" );
					}
					
					next;
					
					@attached_market_npc = .@npc_id;
					
					deletearray .@setup_item_price;
					deletearray .@setup_item_id;
					getinventorylist;
					.@setup_inventory_count = @inventorylist_count;
					copyarray .@setup_item_id,@inventorylist_id,.@setup_inventory_count;
					copyarray .@setup_item_amount,@inventorylist_amount,.@setup_inventory_count;
					copyarray .@setup_item_equip,@inventorylist_equip,.@setup_inventory_count;
					copyarray .@setup_item_refine,@inventorylist_refine,.@setup_inventory_count;
					copyarray .@setup_item_card1,@inventorylist_card1,.@setup_inventory_count;
					copyarray .@setup_item_card2,@inventorylist_card2,.@setup_inventory_count;
					copyarray .@setup_item_card3,@inventorylist_card3,.@setup_inventory_count;
					copyarray .@setup_item_card4,@inventorylist_card4,.@setup_inventory_count;
					copyarray .@setup_item_expire,@inventorylist_expire,.@setup_inventory_count;
					copyarray .@setup_item_bound,@inventorylist_bound,.@setup_inventory_count;
					
					do {
						.@is_complete = ( 
							.@setup_header$ != ""
							&& .@setup_currency >= -2
							&& .@setup_item_size > 0
						);
					
						.@option = select(
							"Edit Header ["+.@setup_header$+"]",
							"Edit Currency ["+func_Currency_Show( .@setup_currency )+"]",
							"Manage Items ["+.@setup_item_size+" items]",
							( .@is_complete ) ? "Done, open shop" : ""
						);
						switch ( .@option ) {
							case 1:
								mes "Enter header:";
								while( input( .@setup_header$, 1, 50 ) );
								.@setup_header$ = replacestr( .@setup_header$, ":", " " );
								break;
							case 2:
								do {
									mes "Select a Currency:";
									.@setup_currency = select( 
										"Kafra Point",
										"Cash Point",
										"Zeny",
										"Item"
									) - 3;
									if ( .@setup_currency > 0 ) {
										mes "Enter Currency's ItemID:";
										input .@setup_currency,0,32767;
										if ( .@setup_currency ) 
											if ( getitemname( .@setup_currency ) == "null" )
												.@setup_currency = -3;
									}
								} while( .@setup_currency <= -3 );
								break;
							case 3:
								if ( .@setup_currency <= -3 ) {
									mes "Please setup a currency first.";
								}
								else {
									do {
										next;
										.@sub_item_add$ = "";
										.@sub_item_delete$ = "";
										.@setup_item_size = 0;
										for ( .@i = 0; .@i < .@setup_inventory_count; .@i++ ) {
											if ( .@setup_item_equip[.@i] <= 0 && .@setup_item_expire[.@i] <= 0 && !.@setup_item_bound[.@i] && !compare( "#"+.banned_item_list$+"#","#"+.@setup_item_id[.@i]+"#" ) ) {
												.@item_name$ = func_Item( .@setup_item_id[.@i],.@setup_item_amount[.@i],.@setup_item_refine[.@i],.@setup_item_card1[.@i],.@setup_item_card2[.@i],.@setup_item_card3[.@i],.@setup_item_card4[.@i] );
												if ( .@setup_item_price[.@i] > 0 ) {
													.@setup_item_size++;
													mes "["+.@setup_item_size+"]"+.@item_name$;
													mes " -> "+F_InsertComma( .@setup_item_price[.@i] )+"x "+func_Currency_Show( .@setup_currency )+" per unit";
													.@sub_item_delete$ = .@sub_item_delete$ + .@item_name$;
												}
												else {
													.@sub_item_add$ = .@sub_item_add$ + .@item_name$;
												}
											}
											.@sub_item_add$ = .@sub_item_add$ + ":";
											.@sub_item_delete$ = .@sub_item_delete$ + ":";
										}
										.@sub_option = select( 
											( .@setup_item_size < .max_item ) ? "Add Item" : "",
											( .@setup_item_size ) ? "Delete Item" : "",
											"Back"
										);
										switch ( .@sub_option ) {
											case 1:
												mes "Which item to add?";
												.@i = select( .@sub_item_add$ ) - 1;
												mes func_Item( .@setup_item_id[.@i],.@setup_item_amount[.@i],.@setup_item_refine[.@i],.@setup_item_card1[.@i],.@setup_item_card2[.@i],.@setup_item_card3[.@i],.@setup_item_card4[.@i] );
												func_Item_Card( .@setup_item_card1[.@i],.@setup_item_card2[.@i],.@setup_item_card3[.@i],.@setup_item_card4[.@i] );
												if ( @inventorylist_amount[.@i] > 1 ) {
													mes "Enter amount to sell:";
													input .@setup_item_amount[.@i],0,@inventorylist_amount[.@i];
												}
												if ( .@setup_item_amount[.@i] ) {
													mes "Enter cost per unit:";
													.@max_cost_value = ( ( .@currency > 0 ) ? .max_amount_item : .max_amount_zeny );
													input .@setup_item_price[.@i],0,.@max_cost_value;
												}
												break;
											case 2:
												mes "Which item to delete?";
												.@i = select( .@sub_item_delete$ ) - 1;
												.@setup_item_price[.@i] = 0;
												break;
											default: break;
										}
									} while ( .@sub_option < 3 );
								}
								break;
							default: break;
						}
						next;
					} while ( .@option < 4 );
					mes "Shop created.";
					dispbottom "Shop - Currency - "+func_Currency_Show( .@currency );
					.@gettimetick = gettimetick(2);
					for ( .@i = 0; .@i < .@setup_inventory_count; .@i++ ) {
						if ( .@setup_item_price[.@i] > 0 && countitem2( .@setup_item_id[.@i],1,.@setup_item_refine[.@i],0,.@setup_item_card1[.@i],.@setup_item_card2[.@i],.@setup_item_card3[.@i],.@setup_item_card4[.@i] ) >= .@setup_item_amount[.@i] ) {
							delitem2 .@setup_item_id[.@i],.@setup_item_amount[.@i],1,.@setup_item_refine[.@i],0,.@setup_item_card1[.@i],.@setup_item_card2[.@i],.@setup_item_card3[.@i],.@setup_item_card4[.@i];
							dispbottom " > "+func_Item( .@setup_item_id[.@i],.@setup_item_amount[.@i],.@setup_item_refine[.@i],.@setup_item_card1[.@i],.@setup_item_card2[.@i],.@setup_item_card3[.@i],.@setup_item_card4[.@i] )+" , total cost - "+F_InsertComma( .@setup_item_price[.@i] )+"x "+func_Currency_Show( .@setup_currency )+" per unit";
							.@sql$ = "INSERT INTO `e_market`"
									+ " ( `npc_id`,`header`,`owner_id`,`currency`,`cost`,`expire`,`nameid`,`amount`,`refine`,`card0`,`card1`,`card2`,`card3`,`last_edit` )"
									+ " VALUES"
									+ " ( "+.@npc_id+",'"+escape_sql( .@setup_header$ )+"',"+.@aid+","+.@setup_currency+","+.@setup_item_price[.@i]+","+( .@gettimetick + .shop_duration )+","+.@setup_item_id[.@i]+","+.@setup_item_amount[.@i]+","+.@setup_item_refine[.@i]+","+.@setup_item_card1[.@i]+","+.@setup_item_card2[.@i]+","+.@setup_item_card3[.@i]+","+.@setup_item_card4[.@i]+","+.@gettimetick+" )";
							query_sql( .@sql$ );
						}
					}
					donpcevent .@npc_name$+"::OnCreateHeader";
					break;
				case 3:
					.@gettimetick = gettimetick(2);
					deletearray .@id;
					switch( select( 
						"Collect Expired Item",
						"Collect Sold Item",
						"Close Active Shop"
					)) {
						case 1: 
							.@sql$ = "SELECT `id`,`nameid`,`amount`,`refine`,`card0`,`card1`,`card2`,`card3`,`status`"
								+ " FROM `e_market`"
								+ " WHERE `owner_id` = "+.@aid
								+ " AND `nameid` > 0"
								+ " AND `amount` > 0"
								+ " AND `cost` > 0"
								+ " AND `status` = 2";
							query_sql( .@sql$, .@id, .@nameid, .@amount, .@refine, .@card0, .@card1, .@card2, .@card3, .@status );
							.@id_size = getarraysize( .@id );
							
							if ( .@id_size > 0 ) {
								for ( .@i = 0; .@i < .@id_size; .@i++ ) {
									if ( .@status[.@i] == 2 ) {
										if ( checkweight( .@nameid[.@i], .@amount[.@i] ) ) {
											.@retrived_item_count++;
											query_sql( "UPDATE `e_market` SET `status` = 4, `last_edit` = "+.@gettimetick+" WHERE `id` = "+.@id[.@i]+" LIMIT 1" );
											dispbottom "Retrieved " + func_Item( .@nameid[.@i],.@amount[.@i],.@refine[.@i],.@card0[.@i],.@card1[.@i],.@card2[.@i],.@card3[.@i] );
											getitem2 .@nameid[.@i],.@amount[.@i],1,.@refine[.@i],0,.@card0[.@i],.@card1[.@i],.@card2[.@i],.@card3;
										}
										else {
											break;
										}
									}
								}
								mes "Retrieved "+F_InsertComma( .@retrived_item_count )+" x items";
							}
							else {
								mes "Nothing to retrieve.";
							}
							break;
						case 2: 
							.@sql$ = "SELECT `id`,`currency`,( `cost` * `amount` ),`status`"
								+ " FROM `e_market`"
								+ " WHERE `owner_id` = "+.@aid
								+ " AND `nameid` > 0"
								+ " AND `amount` > 0"
								+ " AND `cost` > 0"
								+ " AND `status` = 3";
							query_sql( .@sql$, .@sale_id, .@currency, .@cost, .@status );
							.@sale_id_size = getarraysize( .@sale_id );
							
							if ( .@sale_id_size > 0 ) {
								for ( .@i = 0; .@i < .@sale_id_size; .@i++ ) {
									if ( .@status[.@i] == 3 ) {
										if ( func_Currency_Retrieve( .@currency[.@i],.@cost[.@i] ) ) {
											query_sql( "UPDATE `e_market` SET `status` = 4, `last_edit` = "+.@gettimetick+" WHERE `id` = "+.@sale_id[.@i]+" LIMIT 1" );
											mes "Retrieved "+F_InsertComma( .@cost[.@i] )+" x "+func_Currency_Show( .@currency[.@i] );
										}
										else {
											mes "You cant hold that much of Zeny/Item/Points now.";
											break;
										}
									}
								}
							}
							else {
								mes "Nothing to retrieve.";
							}
							break;
						case 3:
							.@sql$ = "SELECT `id`,`nameid`,`amount`,`refine`,`card0`,`card1`,`card2`,`card3`,`status`"
								+ " FROM `e_market`"
								+ " WHERE `owner_id` = "+.@aid
								+ " AND `nameid` > 0"
								+ " AND `amount` > 0"
								+ " AND `cost` > 0"
								+ " AND `status` < 2";
							
							query_sql( .@sql$, .@id, .@nameid, .@amount, .@refine, .@card0, .@card1, .@card2, .@card3, .@status );
							.@id_size = getarraysize( .@id );
							
							if ( .@id_size > 0 ) {
								mes "item to be collected "+.@id_size+" item(s).";
								
								for ( .@i = 0; .@i < .@id_size; .@i++ ) {
									if ( .@status[.@i] < 2 ) {
										if ( checkweight( .@nameid[.@i], .@amount[.@i] ) ) {
											.@retrived_item_count++;
											query_sql( "UPDATE `e_market` SET `status` = 4, `last_edit` = "+.@gettimetick+" WHERE `id` = "+.@id[.@i]+" LIMIT 1" );
											dispbottom "Retrieved " + func_Item( .@nameid[.@i],.@amount[.@i],.@refine[.@i],.@card0[.@i],.@card1[.@i],.@card2[.@i],.@card3[.@i] );
											getitem2 .@nameid[.@i],.@amount[.@i],1,.@refine[.@i],0,.@card0[.@i],.@card1[.@i],.@card2[.@i],.@card3;
										}
										else {
											break;
										}
									}
								}
								mes "Retrieved "+F_InsertComma( .@retrived_item_count )+" x items";
							}
							else {
								mes "Nothing to retrieve.";
							}
							break;
						default:
							break;
					}
					donpcevent .@npc_name$+"::OnCreateHeader";
					break;
				default:
					mes "Information...";
					break;
			}
		}
		close;
		
	OnClearData:
		.@npc_id = atoi( strnpcinfo(2) );
		.@aid = getcharid(3);
		if ( .@npc_id && .@aid ) {
			query_sql( "DELETE FROM `e_market` WHERE `npc_id` = "+.@npc_id+" AND ( `nameid` = 0 OR `amount` = 0 ) AND `owner_id` = "+.@aid );
		}
		end;

	OnPCLogoutEvent:
		if ( strnpcinfo(2) == "" && @attached_market_npc ) {
			query_sql( "DELETE FROM `e_market` WHERE `npc_id` = "+@attached_market_npc+" AND ( `nameid` = 0 OR `amount` = 0 ) AND `owner_id` = "+getcharid(3) );
		}
		end;
		
	OnInit:
		if ( strnpcinfo(2) == "" ) {
			// max item to vend in NPC
			.max_item = 12;
			// Max duration(seconds) of shop opened in NPC
			.shop_duration = ( 7 * 24 * 3600 );
			// Max Zeny of Server
			.max_amount_zeny = 1000000000;
			// Max Amount of Item can be hold by Player
			.max_amount_item = 30000;
			// Banned items that cant be added to shop.
			// A temporary fix, until there exist a way to retrieve item_db's trade restriction.
			.banned_item_list$ = "547,598,599,603,617,671,675,744,745,1173,1174,1177,1183,1184,1187,1190,1192,1193,1197,1198,1243,1267,1272,1273,1274,1279,1280,1281,1282,1283,1286,1288,1289,1296,1299,1310,1312,1313,1319,1372,1373,1374,1378,1379,1380,1382,1386,1388,1391,1398,1399,1419,1423,1424,1425,1426,1427,1428,1429,1430,1434,1437,1482,1486,1487,1488,1489,1493,1495,1533,1534,1536,1537,1542,1543,1546,1547,1563,1566,1567,1574,1575,1576,1577,1578,1579,1580,1583,1588,1591,1598,1623,1627,1628,1632,1633,1634,1635,1638,1640,1641,1642,1644,1645,1650,1651,1652,1653,1658,1667,1681,1687,1699,1703,1728,1729,1735,1738,1739,1743,1744,1747,1748,1749,1817,1823,1824,1826,1827,1828,1829,1831,1834,1921,1923,1924,1927,1928,1929,1931,1932,1938,1975,1977,1978,1981,1982,1983,1986,1987,1994,2002,2003,2018,2019,2024,2112,2127,2132,2136,2137,2140,2145,2152,2178,2179,2180,2352,2358,2368,2369,2370,2376,2377,2378,2379,2380,2381,2382,2384,2385,2392,2393,2394,2395,2396,2398,2414,2427,2428,2429,2430,2431,2435,2436,2437,2438,2439,2442,2443,2444,2445,2446,2449,2455,2456,2457,2458,2463,2473,2496,2497,2498,2510,2533,2534,2535,2538,2539,2540,2543,2547,2548,2549,2551,2552,2559,2560,2564,2566,2568,2571,2634,2635,2642,2644,2647,2668,2670,2673,2674,2676,2681,2686,2686,2687,2688,2689,2690,2691,2692,2693,2694,2695,2696,2697,2698,2699,2704,2705,2706,2707,2708,2709,2710,2711,2713,2720,2721,2722,2723,2724,2725,2730,2731,2732,2733,2734,2735,2738,2739,2740,2741,2742,2750,2751,2752,2753,2754,2755,2756,2757,2758,2759,2760,2761,2762,2763,2766,2767,2768,2769,2770,2771,2772,2773,2774,2777,2778,2779,2780,2781,2782,2785,2792,2793,2794,2795,2796,2797,2798,2816,2817,2818,2819,2820,2821,2822,2823,2823,2824,2825,2826,2827,2832,2841,2843,2844,2856,2857,2858,2863,2864,2865,2866,2872,2875,2885,2885,2897,2915,2916,2940,2941,2942,2944,2945,2946,2950,2981,2997,2999,5106,5132,5147,5149,5154,5155,5156,5179,5254,5265,5266,5267,5268,5269,5279,5280,5281,5286,5288,5293,5294,5295,5306,5308,5309,5314,5315,5318,5320,5322,5323,5326,5327,5328,5329,5330,5331,5336,5337,5338,5339,5346,5357,5368,5369,5391,5394,5406,5407,5408,5410,5412,5413,5414,5423,5428,5430,5450,5451,5451,5452,5452,5453,5453,5460,5461,5462,5463,5479,5480,5481,5482,5483,5492,493,5494,5521,5536,5544,5551,5577,5583,5587,5592,5596,5597,5603,5604,5605,5668,5746,5747,5748,5749,5750,5751,5752,5753,5754,5755,5756,5757,5758,5760,5786,5788,5793,5794,5796,5797,5798,5799,5805,5806,5809,5812,5814,5817,5819,5820,5821,5822,5823,5855,5864,6000,6005,6006,6007,6009,6024,6025,6026,6027,6028,6029,6034,6035,6036,6037,6038,6039,6040,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052,6060,6070,6071,6072,6074,6076,6077,6078,6079,6080,6081,6082,6084,6085,6093,6101,6102,6103,6116,6117,6118,6121,6122,6124,6125,6126,6127,6129,6129,6130,6131,6131,6131,6132,6133,6134,6135,6136,6136,6137,6138,6139,6140,6141,6142,6142,6143,6143,6148,6149,6150,6151,6152,6153,6154,6156,6157,6158,6159,6160,6161,6162,6163,6164,6165,6166,6167,6168,6169,6170,6171,6172,6173,6174,6175, 6176,6177,6178,6179,6180,6181,6182,6183,6184,6184,6185,6206,6207,6208,6218,6219,6225,6226,6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,6238,6239,6240, 6241,6242,6266,6267,6268,6269,6270,6271,6272,6273,6274,6275,6276,6277,6278,6296,6298,6299,6304,6305,6306,6307,6308,6320,6327,6345,6347,6348,6349,6350,6351,6352,6353,6354,6355,6356,6357,6358,6359,6377,6378,6380,6383,6384,6385,6386,6387,6388,6389,6390,6391,6392,6396,6397,6398,6399,6400,6401,6402,6411,6412,6415,6416,6417,6418,6419,6420,6421,6422,6424,6425,6426,6427,6428,6429,6430,6431,6432,6433,6434,6435,6436,6440,6441,6442,6443,6444,6446,6447,6448,6449,6450,6451,6452,6456,6457,6464,6465,6480,6484,6488,6489,6500,6501,6502,6503,6504,6505,6506,6507,6519,6520,6536,6539,6540,6541,6542,6543,6544,6545,6546,6547,6548,6549,6552,6553,6554,6555,6556,6562,6563,6566,6567,6584,6585,6586,6593,6625,6654,6655,6656,6657,6671,6672,6673,6674,6681,6682,6684,6685,6686,6687,6688,6689,6690,6698,6699,6700,6701,6702,6703,6704,6705,6706,6708,6709,6710,6713,6714,6715,6720,6721,6722,6723,6724,6725,6726,6727,6733,6746,6747,6748,6749,6752,6753,6754,6766,6767,6768,6769,6784,6785,6786,6787,6788,6789,6814,6815,6816,6817,6818,6819,6820,6821,6824,6825,6826,6827,6833,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,6857,6858,6859,6860,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,6878,6879,6880,6881,6883,6884,6885,6886,6904,6906,6907,6909,6910,6911,6912,6913,6914,6915,6916,6917,6919,6920,6923,6925,6926,6927,6928,6929,6930,6931,6932,6933,6934,6935,6953,6954,6955,6956,6957,6960,6993,6994,7025,7037,7059,7060,7061,7140,7170,7177,7178,7275,7276,7304,7305,7306,7307,7308,7309,7314,7332,7333,7334,7335,7336,7339,7341,7342,7343,7344,7346,7349,7351,7368,7416,7417,7418,7420,7421,7422,7423,7424,7425,7426,7427,7428,7429,7430,7431,7432,7484,7485,7486,7487,7488,7489,7490,7491,7492,7493,7494,7495,7496,7497,7498,7499,7500,7501,7502,7503,7504,7505,7506,7508,7509,7515,7516,7518,7527,7530,7531,7532,7533,7534,7535,7536,7537,7538,7539,7547,7548,7549,7550,7551,7552,7553,7554,7555,7556,7557,7558,7559,7569,7572,7573,7575,7575,7576,7576,7577,7579,7580,7583,7584,7585,7586,7587,7588,7603,7614,7618,7619,7620,7621,7622,7623,7625,7630,7631,7641,7690,7701,7704,7705,7715,7716,7717,7720,7722,7723,7724,7725,7726,7727,7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7740,7741,7755,7759,7763,7764,7765,7766,7767,7773,7775,7776,7779,7780,7784,7785,7786,7787,7788,7789,7790,7791,7793,7794,7800,7801,7802,7803,7820,7821,7822,7823,7825,7826,7827,7828,7829,7839,7840,7841,7842,7843,7844,7863,7865,7866,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904,7906,7907,7909,7910,7912,7913,7914,7917,7919,7920,7923,7928,7929,7930,7945,7949,7950,7951,7952,7953,7954,7959,7960,7961,7962,7963,7964,7965,7966,7967,7968,7969,9028,9058,11011,11012,11013,11014,11015,11016,11500,11501,11502,11503,11504,11514,11551,11552,11553,11554,11565,11566,11567,11568,11569,11570,11571,11572,11573,11574,11575,11576,11577,11578,11579,11580,11581,11582,11583,11584,11585,11586,11587,12142,12153,12154,12155,12156,12157,12158,12159,12160,12161,12162,12163,12164,12165,12166,12167,12168,12169,12170,12171,12172,12173,12174,12175,12176,12177,12178,12179,12180,12181,12182,12199,12202,12203,12204,12205,12206,12207,12208,12209,12210,12211,12212,12213,12214,12215,12216,12217,12218,12219,12220,12221,12238,12239,12246,12258,12259,12261,12262,12263,12264,12265,12266,12267,12268,12269,12270,12271,12272,12273,12274,12275,12276,12277,12278,12287,12288,12289,12294,12295,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,12306,12307,12308,12309,12310,12311,12313,12314,12314,12319,12320,12321,12322,12323,12324,12325,12331,12332,12333,12333,12340,12361,12363,12370,12384,12385,12386,12387,12388,12389,12390,12391,12398,12402,12403,12404,12405,12406,12407,12413,12415,12416,12473,12474,12476,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12492,12493,12497,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12514,12516,12522,12523,12529,12530,12531,12532,12533,12534,12535,12540,12541,12542,12543,12545,12549,12550,12565,12566,12567,12568,12569,12570,12571,12572,12577,12578,12579,12581,12583,12584,12585,12586,12587,12588,12589,12591,12595,12596,12600,12607,12610,12622,12625,12633,12636,12637,12638,12639,12640,12641,12642,12644,12645,12649,12650,12651,12652,12653,12654,12658,12659,12660,12661,12662,12663,12664,12672,12673,12684,12685,12702,12704,12705,12714,12715,12725,12726,12727,12728,12729,12730,12731,12732,12733,12740,12741,12745,12766,12785,12786,12790,12795,12796,12799,12802,12802,12803,12804,12805,12807,12808,12809,12810,12811,12816,12817,12818,12819,12825,12830,12831,12832,12833,12834,12835,12845,12847,12854,12855,12871,12872,12873,12883,12884,12885,12886,12887,12888,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12927,12928,12928,12929,12930,12931,12932,12933,12934,12935,12936,12937,12938,12939,12940,12941,12942,12943,12944,12945,12946,12947,12948,12949,12950,12951,12952,12953,12954,12955,12956,12957,12958,12959,12960,12961,12962,12963,12964,12965,12966,12967,12968,12969,12970,12971,12972,12973,12974,12975,12976,12977,12978,12979,12980,12981,12982,12983,12984,12985,12986,12987,12988,12989,12990,12991,12992,12993,12994,12995,12996,12997,12998,12999,13020,13021,13022,13023,13024,13025,13026,13029,13036,13037,13042,13043,13044,13045,13048,13049,13050,13051,13052,13066,13068,13074,13079,13083,13108,13109,13110,13111,13112,13113,13114,13117,13118,13119,13125,13126,13171,13172,13173,13174,13175,13176,13177,13178,13179,13184,13185,13186,13187,13208,13291,13292,13293,13295,13305,13306,13307,13308,13309,13310,13312,13317,13322,13323,13401,13402,13403,13406,13407,13408,13409,13410,13411,13416,13417,13418,13419,13422,13423,13424,13425,13434,13439,13500,13501,13502,13503,13504,13505,13506,13507,13508,13509,13510,13511,13512,13513,13514,13515,13516,13517,13518,13519,13520,13521,13522,13523,13524,13525,13526,13527,13528,13529,13530,13531,13532,13533,13534,13535,13536,13537,13538,13539,13540,13541,13542,13543,13544,13545,13546,13547,13548,13549,13550,13551,13552,13553,13554,13555,13556,13557,13558,13559,13560,13561,13562,13563,13564,13565,13566,13567,13568,13569,13570,13571,13572,13573,13574,13575,13576,13577,13578,13579,13580,13581,13582,13583,13584,13585,13586,13587,13588,13589,13590,13591,13592,13593,13594,13595,13596,13597,13598,13599,13600,13601,13602,13603,13604,13605,13606,13607,13608,13609,13610,13611,13612,13613,13614,13615,13616,13617,13618,13619,13620,13621,13622,13623,13624,13625,13626,13627,13628,13629,13630,13631,13632,13633,13634,13635,13636,13637,13638,13639,13640,13641,13642,13643,13644,13645,13646,13647,13648,13649,13650,13651,13652,13653,13654,13655,13656,13657,13658,13659,13660,13661,13662,13663,13664,13665,13666,13667,13668,13669,13670,13671,13672,13673,13674,13675,13676,13677,13678,13679,13680,13681,13682,13683,13684,13685,13686,13687,13688,13689,13690,13691,13692,13693,13694,13695,13696,13696,13697,13698,13699,13700,13701,13702,13703,13704,13705,13706,13707,13708,13709,13710,13711,13712,13713,13714,13715,13716,13717,13718,13719,13720,13721,13722,13723,13724,13725,13726,13727,13728,13729,13730,13731,13734,13735,13736,13737,13738,13739,13740,13741,13742,13743,13744,13745,13746,13747,13748,13749,13750,13751,13752,13753,13754,13755,13756,13757,13758,13759,13760,13761,13762,13763,13764,13765,13766,13767,13768,13769,13770,13771,13772,13773,13774,13775,13776,13777,13778,13779,13780,13781,13782,13783,13784,13785,13786,13787,13788,13789,13790,13791,13792,13793,13794,13795,13796,13797,13798,13799,13800,13801,13802,13803,13804,13805,13806,13807,13808,13809,13810,13811,13812,13813,13814,13815,13816,13817,13818,13819,13820,13821,13822,13823,13824,13826,13827,13828,13829,13830,13831,13832,13833,13834,13835,13836,13837,13838,13839,13840,13841,13842,13843,13844,13845,13846,13847,13848,13849,13850,13851,13852,13853,13854,13855,13856,13857,13858,13859,13860,13861,13862,13863,13864,13865,13866,13867,13868,13869,13870,13871,13872,13873,13874,13875,13876,13877,13878,13879,13880,13881,13882,13883,13884,13885,13886,13887,13888,13889,13890,13891,13892,13893,13894,13895,13896,13897,13898,13899,13900,13901,13902,13903,13904,13905,13906,13907,13908,13909,13910,13911,13912,13913,13914,13915,13916,13917,13918,13919,13920,13921,13922,13923,13924,13925,13926,13927,13928,13929,13930,13931,13932,13933,13934,13935,13936,13937,13938,13939,13940,13940,13941,13942,13943,13944,13945,13946,13947,13948,13949,13950,13951,13952,13953,13954,13955,13956,13957,13958,13959,13960,13961,13962,13963,13964,13965,13966,13967,13968,13969,13970,13971,13972,13973,13974,13975,13976,13977,13978,13979,13980,13981,13982,13983,13984,13985,13986,13987,13988,13989,13990,13991,13992,13993,13994,13995,13996,13997,13998,13999,14000,14001,14002,14003,14004,14005,14006,14007,14008,14009,14010,14011,14012,14013,14014,14015,14016,14017,14018,14019,14020,14021,14022,14023,14024,14025,14026,14027,14028,14029,14030,14031,14032,14033,14034,14035,14036,14037,14038,14039,14040,14041,14042,14043,14044,14045,14046,14047,14048,14049,14050,14051,14052,14053,14054,14055,14056,14057,14058,14059,14060,14061,14062,14063,14064,14065,14066,14067,14068,14069,14070,14071,14072,14073,14074,14075,14076,14077,14078,14079,14080,14081,14082,14083,14084,14085,14086,14087,14088,14089,14090,14091,14092,14093,14094,14095,14096,14097,14098,14099,14100,14101,14102,14103,14104,14105,14106,14107,14108,14109,14110,14111,14112,14113,14114,14115,14116,14117,14118,14119,14120,14121,14122,14123,14124,14125,14126,14127,14128,14129,14130,14131,14132,14133,14134,14135,14136,14137,14138,14139,14140,14141,14142,14143,14144,14145,14146,14147,14148,14149,14150,14151,14152,14153,14154,14155,14156,14157,14158,14159,14160,14161,14162,14163,14164,14165,14166,14167,14168,14169,14170,14171,14172,14173,14174,14175,14176,14177,14178,14179,14180,14181,14182,14183,14184,14185,14186,14187,14188,14189,14190,14191,14192,14193,14194,14195,14196,14197,14198,14199,14200,14201,14202,14203,14204,14205,14206,14207,14208,14209,14210,14211,14212,14213,14214,14215,14216,14217,14218,14219,14220,14221,14222,14223,14224,14225,14226,14227,14228,14229,14230,14231,14232,14233,14234,14235,14236,14237,14238,14239,14240,14241,14242,14243,14244,14245,14246,14247,14248,14249,14250,14251,14252,14253,14254,14255,14256,14257,14258,14259,14260,14261,14262,14263,14264,14265,14266,14267,14268,14269,14270,14271,14272,14273,14274,14275,14276,14277,14278,14279,14280,14281,14282,14283,14284,14285,14286,14287,14288,14289,14290,14291,14292,14293,14294,14295,14296,14297,14298,14299,14300,14301,14302,14303,14304,14305,14306,14307,14308,14309,14310,14311,14312,14313,14314,14315,14316,14317,14318,14319,14320,14321,14322,14323,14324,14325,14326,14327,14328,14329,14330,14331,14332,14333,14334,14335,14336,14337,14338,14339,14340,14341,14342,14343,14344,14345,14346,14347,14348,14349,14350,14351,14352,14353,14354,14355,14356,14357,14358,14359,14360,14361,14362,14363,14364,14365,14366,14367,14368,14369,14381,14382,14383,14384,14385,14386,14387,14388,14389,14390,14391,14392,14393,14394,14395,14396,14397,14398,14399,14400,14401,14402,14403,14404,14405,14406,14407,14408,14409,14410,14411,14412,14413,14414,14415,14416,14417,14418,14419,14420,14421,14422,14423,14424,14425,14426,14427,14428,14429,14430,14431,14432,14433,14434,14435,14436,14437,14438,14439,14440,14441,14442,14443,14444,14445,14446,14447,14448,14449,14450,14459,14460,14461,14462,14463,14464,14465,14467,14468,14470,14471,14472,14473,14474,14475,14476,14477,14478,14479,14480,14481,14482,14483,14484,14488,14489,14490,14491,14492,14493,14494,14499,14500,14505,14506,14508,14509,14510,14511,14512,14513,14514,14515,14516,14517,14518,14519,14520,14521,14522,14523,14524,14525,14526,14527,14528,14529,14530,14531,14532,14533,14533,14534,14535,14536,14537,14538,14539,14540,14541,14542,14543,14544,14545,14546,14547,14548,14549,14550,14551,14552,14553,14554,14555,14556,14557,14558,14559,14560,14561,14562,14563,14564,14565,14566,14567,14568,14569,14570,14571,14572,14573,14575,14576,14577,14578,14579,14580,14581,14582,14583,14584,14585,14586,14587,14588,14589,14590,14591,14591,14592,14593,14594,14595,14597,14598,14599,14600,14601,14602,14603,14604,14605,14606,14611,14612,14613,14614,14616,14617,14618,14619,14620,14621,14623,14627,14628,14663,14672,14673,14675,14679,14682,14689,14696,14704,14705,14713,14717,14718,14723,14724,14725,14726,14727,14728,14729,14730,14731,14732,14733,14735,14739,14740,14758,14765,14766,14805,15001,15002,15007,15009,15010,15011,15023,15031,15033,15034,15062,15063,15064,15067,15116,15141,16002,16004,16005,16006,16014,16016,16023,16025,16038,16100,16101,16102,16103,16104,16105,16106,16107,16108,16109,16110,16111,16112,16113,16114,16115,16116,16117,16118,16119,16120,16121,16122,16123,16124,16125,16126,16127,16128,16129,16130,16131,16132,16133,16134,16135,16136,16137,16138,16139,16140,16141,16142,16143,16144,16145,16146,16147,16148,16149,16150,16151,16152,16153,16154,16155,16156,16157,16158,16159,16160,16161,16162,16163,16164,16165,16166,16167,16168,16169,16170,16171,16172,16173,16174,16175,16176,16177,16178,16179,16180,16181,16182,16183,16184,16185,16186,16187,16188,16189,16190,16191,16192,16193,16194,16220,16221,16222,16223,16224,16225,16226,16227,16228,16229,16229,16230,16231,16232,16235,16236,16237,16238,16240,16241,16242,16243,16246,16247,16248,16251,16252,16254,16255,16256,16258,16259,16260,16261,16262,16263,16264,16265,16271,16272,16273,16274,16275,16276,16277,16278,16279,16280,16281,16282,16283,16284,16285,16286,16287,16288,16289,16290,16291,16292,16293,16294,16295,16296,16297,16298,16299,16300,16301,16302,16303,16304,16305,16306,16307,16308,16309,16310,16311,16312,16313,16314,16315,16316,16317,16318,16319,16320,16321,16322,16323,16324,16325,16326,16327,16328,16329,16330,16331,16332,16333,16334,16335,16336,16337,16338,16339,16340,16347,16348,16349,16350,16351,16352,16353,16354,16355,16356,16357,16358,16358,16360,16361,16362,16363,16368,16369,16370,16372,16373,16374,16375,16378,16379,16380,16381,16382,16383,16384,16385,16386,16387,16388,16389,16390,16391,16392,16393,16394,16395,16396,16397,16398,16399,16400,16401,16402,16403,16405,16406,16407,16408,16432,16433,16434,16435,16442,16443,16444,16445,16447,16448,16449,16450,16452,16453,16454,16455,16467,16468,16469,16470,16481,16483,16504,16505,16506,16507,16508,16509,16510,16514,16515,16543,16544,16555,16573,16574,16580,16581,16596,16597,16598,16599,16625,16626,16627,16628,16629,16630,16634,16635,16636,16637,16638,16639,16640,16641,16642,16643,16644,16645,16646,16647,16648,16649,16650,16651,16655,16656,16657,16658,16660,16661,16662,16663,16666,16667,16671,16672,16677,16678,16679,16680,16682,16683,16689,16690,16740,16741,16742,16743,16744,16745,16746,16747,16748,16749,16750,16751,16752,16758,16759,16760,16761,16762,16763,16764,16765,16766,16767,16770,16771,16776,16777,16778,16779,16780,16781,16782,16783,16784,16785,16786,16787,16788,16789,16790,16791,16792,16793,16794,16795,16796,16797,16798,16799,16800,16801,16802,16803,16804,16805,16806,16807,16808,16809,16810,16811,16812,16813,16814,16815,16816,16817,16818,16819,16820,16821,16822,16823,16824,16825,16827,16828,16829,16830,16831,16832,16833,16834,16835,16836,16837,16838,16839,16840,16841,16843,16844,16845,16846,16847,16848,16849,16850,16851,16852,16853,16854,16855,16856,16857,16858,16859,16860,16861,16862,16863,16864,16865,16866,16867,16868,16869,16870,16871,16872,16873,16874,16875,16876,16877,16878,16879,16880,16881,16882,16883,16884,16885,16886,16887,16888,16889,16890,16891,16892,16893,16894,16895,16896,16897,16898,16899,16900,16901,16902,16903,16904,16905,16906,16907,16908,16909,16910,16911,16912,16913,16914,16915,16916,16917,16918,16919,16920,16921,16922,16923,16924,16925,16926,16927,16928,16929,16930,16931,16932,16933,16934,16935,16936,16937,16938,16939,16940,16941,16942,16943,16944,16945,16946,16947,16948,16949,16950,16951,16952,16953,16954,16955,16956,16957,16958,16959,16960,16961,16962,16963,16964,16965,16966,16967,16968,16969,16970,16971,16972,16973,16974,16975,16976,16977,16978,16979,16995,16998,16999,17013,17014,17015,17027,17037,17038,17039,17040,17041,17042,17043,17044,17045,17046,17065,17084,17085,17086,17087,17088,17089,17090,17091,17092,17093,17094,17095,17096,17097,17098,17099,17100,17101,17102,17103,17106,17118,17122,17123,17126,17135,17136,17137,17144,17153,17154,17155,17159,17160,17163,17164,17166,17171,17172,17173,17174,17175,17176,17177,17178,17179,17180,17182,17193,17194,17195,17196,17197,17198,17200,17201,17202,17204,17205,17206,17224,17226,17227,17228,17229,17231,17232,17241,17244,17246,17247,17251,17252,17253,17254,17262,17263,17264,17265,17266,17270,17271,17272,17273,17274,17275,17277,17278,17279,17281,17282,17283,17284,17285,17286,17287,17288,17292,17293,17294,17298,17299,17302,17303,17304,17306,17314,17315,17316,17321,17322,17331,17332,17338,17339,17429,17430,17432,17433,17438,17439,17440,17441,17442,17443,17449,17455,17456,17457,17461,17465,17466,17467,17468,17469,17470,17472,17473,17474,17475,17477,17478,17481,17483,17484,17491,17492,17493,17495,17496,17497,17498,17499,17501,17502,17507,17508,17509,17510,17511,17512,17513,17515,17516,17517,17520,17521,17522,17523,17524,17525,17527,17544,17545,17547,17548,17549,17550,17567,17568,17569,17648,17659,17665,17671,17674,17681,17692,17570,17573,17574,17582,17583,17681,17692,18100,18106,18107,18108,18116,18118,18128,18500,18501,18502,18505,18514,18520,18526,18556,18557,18566,18579,18731,18732,18733,18734,18779,18780,18781,18796,18828,18829,18830,18970,18971,18972,18973,18974,18975,18976,18977,18978,18979,18980,18981,18982,18983,18984,19033,19051,19052,19053,19523,19531,19532,19764,19765,19853,19996,19999,20000,20001,20002,20003,20025,20026,20027,20028,20053,20063,20064,20067,20068,20086,20087,20088,20089,20110,20111,20135,20136,20139,20140,20162,20163,20179,20206,20210,20211,20227,20228,20702,20703,20704,20709,20743,20779,21005,21006,21014,22012,22046,22075,22508,22510,22511,22513,22517,22521,22522,22523,22524,22525,22526,22527,22528,22533,22535,22536,22539,22540,22541,22542,22543,22544,22545,22546,22547,22548,22549,22550,22551,22552,22553,22554,22555,22556,22557,22566,22569,22589,22590,22591,22592,22610,22614,22617,22618,22619,22623,22626,22627,22652,22671,22672,22673,22674,22685,22691,22692,22693,22694,22695,22700,22708,22717,22718,22719,22720,22734,22735,22736,22756,22760,22761,22762,22764,22777,22781,22782,22783,22784,22802,22807,22808,22812,22813,22816,22817,22818,22819,22820,22821,22823,22828,22829,22837,22842,22844,22845,22846,22850,22851,22852,22853,22854,22855,22856,22857,22858,22859,22860,22861,22869,22870,22873,22874,22875,22881,22883,22884,22885,22886,22887,22888,22893,22894,22895,22896,22901,22902,22906,22946,22947,22948,22949,22950,22951,22952,23177,23196,25132,25133,25143,25144,25145,25146,25147,25148,25149,25150,26100,26101,28105,28310,28311,28333,28703,41120,41121,41122,41123,41124,41125,41125,41127,41128,41129,41130,41131,41132,41133,41134,41135,41136,41137,41138,41139,41140,41141,41142,41143,41144,41145,41146,41147,41148,41149,41150,41151,41152,41153,41154,41155,41156,41157,41158,41159,41160,41161,41162,41163,41164,41165,41166,41167,41168,41169,41170,41171,41172,41173,41174,41175,41176,41177,41178,41179,41180,41181,41182,41183,41184,41185,41186,41187,41188,41189,41190,41191,41192,41193,41194,41195,41196,41197,41198,41199,41200,41201,41202,41203,41204,41205,41206,41207,41208,41209,41210,41211,41212,41213,41214,41215,41216,41217,41218,41219,41220,41221,41222,41223,41224,41225,41226,41227,41228,41229,41230,41231,41232,41233,41234,41235,41236,41237,41238,41239,41240,41241,41242,41243,41244,41245,41246,41247,4124841249,41250,41251,41252,41253,41254,41255,41256,41257,41258";
			
			query_sql( "DELETE FROM `e_market` WHERE ( `nameid` = 0 AND `amount` = 0 )" );
		}
		else {
			sleep 1000;
			donpcevent strnpcinfo(3)+"::OnCreateHeader";
		}
		end;
		
	OnMinute00:
	OnMinute30:
		if ( strnpcinfo(2) != "" ) {
			.@gettimetick = gettimetick(2);
			query_sql( "UPDATE `e_market` SET `status` = 2, `last_edit` = "+.@gettimetick+" WHERE `status` = 1 AND `expire` <= "+.@gettimetick );
			sleep 1000;
			donpcevent strnpcinfo(3)+"::OnCreateHeader";
		}
		end;
		
	OnCreateHeader:
		query_sql( "SELECT `header` FROM `e_market` WHERE `npc_id` = "+strnpcinfo(2)+" AND `status` = 1 AND `nameid` > 0 AND `amount` > 0 AND `expire` > "+gettimetick(2)+" LIMIT 1", .@header$ );
		delwaitingroom;
		if ( .@header$ != "" )
			waitingroom .@header$,0;
		end;
		
	function	func_Item	{
		.@nameid = getarg( 0,0 );
		.@amount = getarg( 1,1 );
		.@refine = getarg( 2,0 );
		
		for ( .@i = 3; .@i <= 6; .@i++ )
			.@card_count += ( getarg( .@i,0 ) > 0 );
			
		.@name$ = getitemname( .@nameid );
		.@type = getiteminfo( .@nameid,2 );
		.@slot = getitemslots( .@nameid );
		
		if ( .@type == IT_ARMOR || .@type == IT_WEAPON ) {
			if ( .@slot )
				.@name$ = .@name$ + "["+.@slot+"]";
			if ( .@card_count )
				.@name$ = .@name$ + " ("+.@card_count+" Cards)";
			if ( .@refine )
				.@name$ = "+" + .@refine + " " + .@name$;
		}
		.@name$ = F_InsertComma( .@amount ) + "x " + .@name$;
	
		return replacestr( .@name$, ":", " " );
	}
	
	function	func_Item_Card	{
		for ( .@i = 0; .@i < 4; .@i++ ) {
			.@card_id = getarg( .@i,0 );
			if ( .@card_id ) {
				.@count = getd( ".@card_"+.@card_id );
				if ( !.@count ) {
					.@card[.@c] = .@card_id;
					.@c++;
				}
				setd( ".@card_"+.@card_id ),.@count + 1;
			}
		}
		
		for ( .@i = 0; .@i < .@c; .@i++ ) {
			.@count = getd( ".@card_"+.@card[.@i] );
			if ( .@count ) 
				mes " > "+.@count+"x "+getitemname( .@card[.@i] );
		}
		return;
	}
	
	function	func_Currency_Show	{
		.@currency = getarg( 0,0 );
		
		if ( .@currency == 0 ) {
			return "Zeny";
		}
		else if ( .@currency == -1 ) {
			return "Cash Point";
		}
		else if ( .@currency == -2 ) {
			return "Kafra Point";
		}
		else {
			return getitemname( .@currency );
		}
	}
	
	function	func_Currency_Check	{
		.@currency = getarg( 0,0 );
		.@amount = getarg( 1,0 );
		
		if ( .@currency == 0 ) {
			return ( Zeny >= .@amount );
		}
		else if ( .@currency == -1 ) {
			return ( #CASHPOINTS >= .@amount );
		}
		else if ( .@currency == -2 ) {
			return ( #KAFRAPOINTS >= .@amount );
		}
		else {
			return ( countitem( .@currency ) >= .@amount );
		}
	}

	function	func_Currency_Pay	{
		.@currency = getarg( 0,0 );
		.@amount = getarg( 1,0 );
		
		if ( .@currency == 0 ) {
			Zeny -= .@amount;
		}
		else if ( .@currency == -1 ) {
			#CASHPOINTS -= .@amount;
		}
		else if ( .@currency == -2 ) {
			#KAFRAPOINTS -= .@amount;
		}
		else {
			delitem .@currency,.@amount;
		}
		return;
	}
	
	function	func_Currency_Retrieve	{
		.@currency = getarg( 0,0 );
		.@amount = getarg( 1,0 );
		
		if ( .@currency == 0 ) {
			if ( ( .max_amount_zeny - Zeny ) < .@amount )
				return 0;
			Zeny += .@amount;
			dispbottom "Retrieved "+F_InsertComma( .@amount )+" Zeny";
		}
		else if ( .@currency == -1 ) {
			if ( ( .max_amount_zeny - #CASHPOINTS ) < .@amount )
				return 0;
			#CASHPOINTS += .@amount;
			dispbottom "Retrieved "+F_InsertComma( .@amount )+" CASHPOINTS";
		}
		else if ( .@currency == -2 ) {
			if ( ( .max_amount_zeny - #KAFRAPOINTS ) < .@amount )
				return 0;
			#KAFRAPOINTS += .@amount;
			dispbottom "Retrieved "+F_InsertComma( .@amount )+" KAFRAPOINTS";
		}
		else {
			if ( getitemname( .@currency ) == "null" )
				return 0;
			if ( !checkweight( .@currency,.@amount ) )
				return 0;
			if ( ( .max_amount_item - countitem( .@currency ) ) < .@amount )
				return 0;
			getitem .@currency,.@amount;
			dispbottom "Retrieved "+F_InsertComma( .@amount )+" x "+getitemname( .@currency );
		}
		return 1;
	}
}


// -- duplicate more NPC if you need more slot.
milenia,95,174,5	duplicate(market_npc_main)	Universal Shop 01#1	464
milenia,95,178,5	duplicate(market_npc_main)	Universal Shop 02#2	464
milenia,95,182,5	duplicate(market_npc_main)	Universal Shop 03#3	464

milenia,89,174,5	duplicate(market_npc_main)	Universal Shop 04#4	464
milenia,89,178,5	duplicate(market_npc_main)	Universal Shop 05#5	464
milenia,89,182,5	duplicate(market_npc_main)	Universal Shop 06#6	464

milenia,83,174,5	duplicate(market_npc_main)	Universal Shop 07#7	464
milenia,83,178,5	duplicate(market_npc_main)	Universal Shop 08#8	464
milenia,83,182,5	duplicate(market_npc_main)	Universal Shop 09#9	464

milenia,77,174,5	duplicate(market_npc_main)	Universal Shop 10#10	464
milenia,77,178,5	duplicate(market_npc_main)	Universal Shop 11#11	464
milenia,77,182,5	duplicate(market_npc_main)	Universal Shop 12#12	464

milenia,71,174,5	duplicate(market_npc_main)	Universal Shop 13#13	464
milenia,71,178,5	duplicate(market_npc_main)	Universal Shop 14#14	464
milenia,71,182,5	duplicate(market_npc_main)	Universal Shop 15#15	464

milenia,65,174,5	duplicate(market_npc_main)	Universal Shop 16#16	464
milenia,65,178,5	duplicate(market_npc_main)	Universal Shop 17#17	464
milenia,65,182,5	duplicate(market_npc_main)	Universal Shop 18#18	464

milenia,59,174,5	duplicate(market_npc_main)	Universal Shop 19#19	464
milenia,59,178,5	duplicate(market_npc_main)	Universal Shop 20#20	464
milenia,59,182,5	duplicate(market_npc_main)	Universal Shop 21#21	464

milenia,53,174,5	duplicate(market_npc_main)	Universal Shop 22#22	464
milenia,53,178,5	duplicate(market_npc_main)	Universal Shop 23#23	464
milenia,53,182,5	duplicate(market_npc_main)	Universal Shop 24#24	464

milenia,47,174,5	duplicate(market_npc_main)	Universal Shop 25#25	464
milenia,47,178,5	duplicate(market_npc_main)	Universal Shop 26#26	464
milenia,47,182,5	duplicate(market_npc_main)	Universal Shop 27#27	464
//alberta,50,245,5	duplicate(market_npc_main)	Market NPC#2	4_BOARD3