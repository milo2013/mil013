//===== rAthena Script =======================================
//= Battleground: PVP
//===== By: ==================================================
//= AnnieRuru
//===== Current Version: =====================================
//= 1.0
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= A simple battleground script:
//= Kill players from the other team.
//===== Additional Comments: =================================
//= 1.0 First version, edited. [Euphy]
//============================================================

-	script	bg_pvp#control	-1,{
OnInit:
	.minplayer2start = 1;      // minimum players to start (ex. if 3vs3, set to 3)
	.eventlasting    = 20*60;  // event duration before auto-reset (20 minutes * seconds)
	setarray .rewarditem[0],   // rewards for the winning team: <item>,<amount>,...
		41162, rand (5,30);
	end;
OnStart:
	if ( getwaitingroomstate( 0, .rednpcname$ ) < .minplayer2start || getwaitingroomstate( 0, .bluenpcname$ ) < .minplayer2start )
		end;

	// create Battleground and teams
	.red = waitingroom2bg( "endless_war",35,86,strnpcinfo(0)+"::OnRedQuit", strnpcinfo(0)+"::OnRedDead", .rednpcname$ );
	copyarray .team1aid, $@arenamembers, $@arenamembersnum;
	.team1count = .minplayer2start;
	.blue = waitingroom2bg( "endless_war", 220,86, strnpcinfo(0)+"::OnBlueQuit", strnpcinfo(0)+"::OnBlueDead", .bluenpcname$ );
	copyarray .team2aid, $@arenamembers, $@arenamembersnum;
	.team2count = .minplayer2start;
	delwaitingroom .rednpcname$;
	delwaitingroom .bluenpcname$;
	bg_warp .red, "endless_war",35,86;
	bg_warp .blue, "endless_war", 220,86;
	.score[1] = .score[2] = .minplayer2start;
	bg_updatescore "endless_war", .score[1], .score[2];

	// match duration
	sleep .eventlasting * 1000;

	// end match, destroy Battleground, reset NPCs
	if (  .score[2] < 1) {
		mapannounce "endless_war", "- Emily Heroes is victorious! -", bc_map;
		callsub L_Reward, 1;
	}
	else if ( .score[1] < 1 ) {
		mapannounce "endless_war", "- Logan Warriors is victorious! -", bc_map;
		callsub L_Reward, 2;
	}
	else
		mapannounce "endless_war", "- The match has ended in a draw! -", bc_map;
	bg_warp .red, "prt_cas",101,277;
	bg_warp .blue, "prt_cas",87,277;
	bg_destroy .red;
	bg_destroy .blue;
	donpcevent .rednpcname$ +"::OnStart";
	donpcevent .bluenpcname$ +"::OnStart";
	end;

L_Reward:
	for ( .@i = 0; .@i < getd(".team"+ getarg(0) +"count"); .@i++ )
		getitem .rewarditem[0], .rewarditem[1], getd(".team"+ getarg(0) +"aid["+ .@i +"]" );
	return;

// "OnDeath" event
OnRedDead:  callsub L_Dead, 1;
OnBlueDead: callsub L_Dead, 2;
L_Dead:
	.score[ getarg(0) ]--;
	bg_updatescore "endless_war", .score[1], .score[2];
	while ( getd( ".team"+ getarg(0) +"aid["+ .@i +"]" ) != getcharid(3) && .@i < getd(".team"+ getarg(0) +"count") ) .@i++;
	deletearray getd( ".team"+ getarg(0) +"aid["+ .@i +"]" ), 1;
	setd ".team"+ getarg(0) +"count", getd(".team"+ getarg(0) +"count") -1;
	bg_leave;
	if ( !.score[ getarg(0) ] )
		awake strnpcinfo(0);
	sleep2 1250;
	percentheal 100,100;
	end;

// "OnQuit" event
OnRedQuit:  callsub L_Quit, 1;
OnBlueQuit: callsub L_Quit, 2;
L_Quit:
	.score[ getarg(0) ]--;
	bg_updatescore "endless_war", .score[1], .score[2];
	percentheal 100, 100;
	while ( getd( ".team"+ getarg(0) +"aid["+ .@i +"]" ) != getcharid(3) && .@i < getd(".team"+ getarg(0) +"count") ) .@i++;
	deletearray getd( ".team"+ getarg(0) +"aid["+ .@i +"]" ), 1;
	setd ".team"+ getarg(0) +"count", getd(".team"+ getarg(0) +"count") -1;
	if ( !.score[ getarg(0) ] )
		awake strnpcinfo(0);
	end;
	// edited
	mapannounce "endless_war", "- The match has ended in a draw because someone quit! -", bc_map;
	bg_warp .red, "prt_cas",101,277;
	bg_warp .blue, "prt_cas",87,277;
	bg_destroy .red;
	bg_destroy .blue;
	donpcevent .rednpcname$ +"::OnStart";
	donpcevent .bluenpcname$ +"::OnStart";
	end;
	/*
	.score[ getarg(0) ]--;
	bg_updatescore "endless_war", .score[1], .score[2];
	percentheal 100, 100;
	while ( getd( ".team"+ getarg(0) +"aid["+ .@i +"]" ) != getcharid(3) && .@i < getd(".team"+ getarg(0) +"count") ) .@i++;
	deletearray getd( ".team"+ getarg(0) +"aid["+ .@i +"]" ), 1;
	setd ".team"+ getarg(0) +"count", getd(".team"+ getarg(0) +"count") -1;
	if ( !.score[ getarg(0) ] )
		awake strnpcinfo(0);
	end;
	*/
}

prt_cas,107,277,11	script	Commander Emily#bg_pvp	10192,{
	end;
OnInit:
	sleep 1;
	set getvariableofnpc( .rednpcname$, "bg_pvp#control" ), strnpcinfo(0);
OnStart:
	waitingroom "Emily Heroes", getvariableofnpc( .minplayer2start, "bg_pvp#control" ) +1, "bg_pvp#control::OnStart", getvariableofnpc( .minplayer2start, "bg_pvp#control" );
	end;
}

prt_cas,80,276,5	script	Commander Logan#bg_pvp	10187,{
	end;
OnInit:
	sleep 1;
	set getvariableofnpc( .bluenpcname$, "bg_pvp#control" ), strnpcinfo(0);
OnStart:
	waitingroom "Logan Warriors", getvariableofnpc( .minplayer2start, "bg_pvp#control" ) +1, "bg_pvp#control::OnStart", getvariableofnpc( .minplayer2start, "bg_pvp#control" );
	end;
}

endless_war	mapflag	battleground	2
endless_war	mapflag	nosave	SavePoint
endless_war	mapflag	nowarp
endless_war	mapflag	nowarpto
endless_war	mapflag	noteleport
endless_war	mapflag	nomemo
endless_war	mapflag	nopenalty
endless_war	mapflag	nobranch
endless_war	mapflag	noicewall
endless_war	mapflag	hidemobhpbar
endless_war	mapflag	noitemconsumption
endless_war	mapflag	restricted	8

//Warper
-	script	WARPBG1	-1,2,2,{
OnTouch:
warp "endless_war",156,86;
end;
}

-	script	WARPBG2	-1,2,2,{
OnTouch:
warp "endless_war",98,86;
end;
}

endless_war,166,86,5	duplicate(WARPBG1)	Battleground Staff#1	571
endless_war,89,86,11	duplicate(WARPBG2)	Battleground Staff#2	571

//Broken Portal
//endless_war,166,86,0	warp	ew#1	1,1,endless_war,156,86
//endless_war,89,86,0	warp	ew#2	1,1,endless_war,98,86
