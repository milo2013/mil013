/*	instance_db.txt

101,LV1 Elite MVP Ladder,3600,300,1@ldr,9,39
102,LV2 Elite MVP Ladder,3600,300,2@ldr,39,72
103,LV3 Elite MVP Ladder,3600,300,3@ldr,72,40
104,LV4 Elite MVP Ladder,3600,300,4@ldr,39,7

*/


function	script	epoch_time_ladder	{
	.@time = getarg(0);
	.@hour = ( .@time / 3600 );
	.@min = ( .@time % 3600 ) / 60 ;
	.@sec = ( ( .@time % 3600 ) % 60 ) % 60;
	
	return sprintf( "%02d:%02d:%02d",.@hour,.@min,.@sec );
}
	
function	script	F_getitemname	{
	.@itemid = getarg(0);
	.@name$ = getitemname( .@itemid );
	if( .@name$ == "null" )
		return "^FF0000[Unknown-"+.@itemid+"]^000000";
	.@type = getiteminfo( .@itemid,2 );
	if( .@type == IT_ARMOR || .@type == IT_WEAPON ){
		.@name$ = .@name$ +" ["+getitemslots( .@itemid )+"]";
	}
	return "<ITEMLINK>"+.@name$+"<INFO>"+.@itemid+"</INFO></ITEMLINK>";
}

// instance
//1@ldr	mapflag	nocommand	10
1@ldr	mapflag	nosave
1@ldr	mapflag	noteleport

//2@ldr	mapflag	nocommand	10
2@ldr	mapflag	nosave
2@ldr	mapflag	noteleport

//3@ldr	mapflag	nocommand	10
3@ldr	mapflag	nosave
3@ldr	mapflag	noteleport

//4@ldr	mapflag	nocommand	10
4@ldr	mapflag	nosave
4@ldr	mapflag	noteleport


kampung,30,59,5	script	Elite MVP Ladder	10192,{
	doevent "elite_mvp_ladder::OnTalk";
}

-	script	elite_mvp_ladder	4_M_EIN_SOLDIER,{
OnTalk:
	.@party_id = getcharid(1);
	.@is_leader = ( getcharid(0) == getpartyleader(.@party_id,2) );
	
	for( .@i = 0; .@i < .map_size && !.@has_instance; .@i++ )
		.@has_instance = ( instance_mapname( .map$[.@i] ) != "" );
	
	mes "^0055FF[ "+.instance_name$+" ]^000000";
	// if ( getgmlevel() < 99 ) {
		// mes "It's under maintenance, not available for short time.";
		// close;
	// }
	mes "Ensure your KRO is updated.";
	mes " ";
	mes "Party leader may speak with me to register the team to entere the memorial dungeon.";
	if ( !.@party_id ) close;
	// mes " ^FF00EE¦¦¦¦^000000¦  80%]^000000";
	next;
	switch( select( 
		( .@party_id && .@is_leader && !.@has_instance )?"Register Party":"",
		( 0 && .@party_id && .@is_leader && .@has_instance )?"":"", // Enter Memorial Dungeon
		( .@party_id && .@is_leader && .@has_instance )?"Give Up":"",
		"Leave"
	)){
		case 1:
			
			mes "Select a Mode, ^FF0000Difficult mode^000000 have better rewards in return.";
			mes "^777777=== Participants === ^000000";
			mes "1 ~  5 - ^FF0000 EASY ^000000";
			mes "1 ~  5 - ^FF0000 MEDIUM ^000000";
			mes "1 ~  5 - ^FF0000 HARD ^000000";
			mes "1 ~ 5 - ^FF0000 INSANE ^000000";
		
			@mode = select( 
				"^FF0000[ 10 Stages ]^000000 EASY^000000",
				"^FF0000[ 30 Stages ]^000000 MEDIUM^000000",
				"^FF0000[ 40 Stages ]^000000 HARD^000000",
				"^FF0000[ 50 Stages ]^000000 INSANE^000000"
			);
			.@selected_mode = @mode - 1; 
			
			getpartymember .@party_id,1;
			getpartymember .@party_id,2;
		
			.@origin = getcharid(3);
			.@time = gettimetick(2);
			for ( .@i = 0; .@i < $@partymembercount; .@i++ )
				if ( isloggedin( $@partymemberaid[.@i],$@partymembercid[.@i] ) ) 
					if ( attachrid( $@partymemberaid[.@i] ) ) {
						.@member_count++;
						
						if ( .delay_timer && .@time < instance_mvpladder ) {
							.@fail_type |= 1;
							.@cooldown = ( instance_mvpladder - .@time );
						}
						if ( Zeny < .zeny_cost ) .@fail_type |= 2;
						
						if ( .@fail_type ) {
							.@name$ = strcharinfo(0);
							break;
						}
					}
			attachrid( .@origin );
			
			next;
			mes "^0055FF[ "+.instance_name$+" ]^000000";
			if( .@name$ != "" ){
				mes "^0055FF"+.@name$+"^000000";
				if ( .@fail_type & 1 ) mes "cooldown left "+epoch_time_ladder( .@cooldown );
				if ( .@fail_type & 2 ) mes "not enough zeny.";
				break;
			}
			
			switch ( @mode ) {
				default:
				case 1: setarray .@party_member,1,5; break;
				case 2: setarray .@party_member,1,5; break;
				case 3: setarray .@party_member,1,5; break;
				case 4: setarray .@party_member,1,5; break;
			}
			
			if( .@member_count < .@party_member[0] || .@member_count > .@party_member[1] ){
				break;
			}
			else {
				.@instance = instance_create( .instance_name$[.@selected_mode] );
				if( .@instance < 0 ) {
					npctalk "Memorial Dungeon reservation failed.";
					mes "^0000FF"+.instance_name$[.@selected_mode]+" ^000000- Reservation Failed!";
					close;
				}
				mes "^0000FF"+.instance_name$[.@selected_mode]+" ^000000 - Reserved";
				npctalk "Memorial Dungeon has been generated for Party - "+getpartyname( .@party_id );
				getpartymember .@party_id,2;
				for( .@i = 0; .@i < $@partymembercount; .@i++ )
					if( attachrid( $@partymemberaid[.@i] ) ) {
						Zeny -= .zeny_cost;
						callsub( L_enter,.instance_name$[.@selected_mode] );
					}
				break;
			}
		case 2:
			.@selected_mode = -1;
			for ( .@i = 0; .@i < .map_size && .@selected_mode >= 0; .@i++ )
				if ( instance_mapname( .map$[.@i] ) != "" )
					.@selected_mode = .@i;
				
			if( .@i >= .map_size || .@selected_mode == -1 ) {
				npctalk "Memorial Dungeon doesnt exist for Party - "+getpartyname( .@party_id );
			}
			else{
			
				getpartymember .@party_id,1;
				getpartymember .@party_id,2;
				for( .@i = 0; .@i < $@partymembercount; .@i++ )
					if ( isloggedin( $@partymemberaid[.@i],$@partymembercid[.@i] ) ) 
						if( attachrid( $@partymemberaid[.@i] ) ) {
							callsub( L_enter,.instance_name$[.@selected_mode] );
						}
				detachrid;
			}
			break;
		case 3:
			mes "Memorial Dungeon Destroyed.";
			instance_destroy instance_id();
			break;
		default: 
			// mes "This is a Memorial Dungeon.";
			break;
	}
	close;
	
	L_enter:
		.@ins = instance_enter( getarg(0) );
		switch ( .@ins ) {
			case 0: 
				instance_mvpladder = gettimetick(2) + .delay_timer;
				break;
			case 1:
				mes "You can enter the dungeon after making the party.";
				close;
			case 2:
				mes "The memorial dungeon Elite MVP Ladder does not exist.";
				mes "The party leader did not generate the dungeon yet.";
				close;
			case 3:
				mes "An unknown error has occurred.";
				close;
		}
		return;

	OnInit:
		// delay in second
		.delay_timer = 82800; //23 hours
		// test delay //.delay_timer = 120;
		// .zeny cost
		.zeny_cost = 1000000;
		// name of Instance
		setarray .instance_name$,
			"LV1 Elite MVP Ladder",
			"LV2 Elite MVP Ladder",
			"LV3 Elite MVP Ladder",
			"LV4 Elite MVP Ladder";
			
		// instance map lists
		setarray .map$,"1@ldr","2@ldr","3@ldr","4@ldr";

		.map_size = getarraysize( .map$ );
		end;
}


-	script	elite_mvp_ladder_main	4_F_SURA,{
	function party_delay;
	function elite_mvp;
	function elite_mvp_skill;
	
	if ( 'ladder_level == -1 ) {
		mes "^0055FF[ Heroes of MVP Ladder ]^000000";
		mes "You want to leave ? You wont be able to come back upon leave.";
		if ( select( "Leave","Cancel" ) == 1 ) {
			warp "Save",0,0;
		}
		close;
	}
	
	if ( 'talking ) end;
	
	.@party_id = getcharid(1);
	.@is_leader = ( getcharid(0) == getpartyleader(.@party_id,2) );
	
	if ( !.@party_id ) {
		mes "^0055FF[ Heroes of MVP Ladder ]^000000";
		mes "You dont belong to any party here.";
		close2;
		warp "Save",0,0;
		end;
	}
	
	if ( 'ladder_mode == 0 && .@is_leader ) {
		mes "^0055FF[ Heroes of MVP Ladder ]^000000";
		if ( select( "Start now !!","Cancel" ) == 1 ) {
			if ( @mode < 1 || @mode > 4 ) {
				npctalk "Seem like your're not the one who registered the Ladder. Get out of here! #"+@mode;
				emotion e_pif;
			}
			else {
				'ladder_mode = @mode;				
				.@name$ = strcharinfo(0);
				'talking = 1;
				
				mes "Are you here to beat my records?";
				next;
				setarray .@msg$,
					"This is Elite MVP Ladder.",
					"I am a Hero for this Ladder since I was able to complete it in the past.",
					"Nobody able to beat my records.",
					"Today it has become your turn to challenge the ladder to break my records.",
					"The ladder is quite different compare to the past.",
					"Nowaday these Bosses are capable to buff themselves using various skills.",
					"Beside, the Boss tend to be more tank-able based on the overall challengers in this area.",
					"Brace yourself!! Ladder is starting...#"+'ladder_mode;
				.@msg_size = getarraysize( .@msg$ );
				
				for ( .@i = 0; .@i < .@msg_size; .@i++ ) {
					mes "^0055FF[ Heroes of MVP Ladder ]^000000";
					mes .@msg$[.@i];
					npctalk .@msg$[.@i];
					next;
				}
				close2;
				'talking = 0;
				emotion e_gg;
				.@npc_name$ = instance_npcname( strnpcinfo(0) );
				npctalk "Get ready, you have 5 seconds to prepare!";
				donpcevent .@npc_name$+"::OnRestart";
				initnpctimer;
				end;
			}
		}
		end;
	}
	specialeffect2 EF_HEAL2;
	percentheal 100,100;
	end;

	function	party_delay	{
		.@map$ = getarg( 0 );
		.@party_id = getarg( 1 );
		.@zeny = getarg( 2,0 );
		.@time = gettimetick(2) + getvariableofnpc( .delay_timer, "elite_mvp_ladder" );
		
		getpartymember .@party_id,2;
		for( .@i = 0; .@i < $@partymembercount; .@i++ )
			if( attachrid( $@partymemberaid[.@i] ) )
				if ( strcharinfo(3) == .@map$ ) {
					instance_mvpladder = .@time;
					// dispbottom "Time: "+.@time;
					// dispbottom "instance_mvpladder = "+instance_mvpladder;
					// dispbottom "gettimetick = "+gettimetick(2);
					// dispbottom "added = "+ getvariableofnpc( .delay_timer, "elite_mvp_ladder" );
					
					if ( .@zeny > 0 ) {
						Zeny += .@zeny;
						dispbottom "[Elite MVP Ladder] +"+F_InsertComma( .@zeny )+" Zeny";
					}
				}
		detachrid;
	}
	
	OnInit:
		hideonnpc strnpcinfo(0);
		end;
	
	OnInstanceInit:
		sleep 500;
		.@map$ = strnpcinfo(4);
		.@npc_name$ = instance_npcname( strnpcinfo(0) );

		hideoffnpc strnpcinfo(0);
		setmapflag .@map$,mf_nomvploot;
		setmapflag .@map$,mf_nomobloot;
		'ladder_level = 0;
		// 'ladder_mode = 0;
		'talking  = 0;
		emotion e_gg;
		
		if ( 'ladder_mode != 0 ) {
			'ladder_mode = 0;
			npctalk "Leader shall confirm with me to start the ladder.";
		}
		end;
		
		
	OnRestart:
		.@map$ = strnpcinfo(4);
		
		switch ( 'ladder_mode ) {
			default:
			case 1: .@max_level = 10; break;
			case 2: .@max_level = 30; break;
			case 3: .@max_level = 40; break;
			case 4: .@max_level = 50; break;
		}
		
		.@npc_name$ = strnpcinfo(3);
		.@label$ = .@npc_name$ + ( ( 'ladder_level < .@max_level )? "::OnRestart":"::OnFinal" );
		
		
		if ( mobcount( .@map$,.@label$ ) ) end;
		
		
		if ( playerattached() ) {
		//	.@rate = ( 95 + 'ladder_level );
		//	if ( rand( 100 ) < .@rate ) {
		//		getitem 41204,1;
		//	}
	
		//	addrid(2,0,getcharid(1));
		//	getitem 41204,1;
			
		//.@party_id = getcharid(1);
			
			
		
			percentheal 100,100;
			mapannounce .@map$,"[Elite MVP Ladder] The Boss has been defeated. You have some time for rest now.",bc_map;
			.@party_id = getcharid(1);
			party_delay( .@map$,.@party_id,.@zeny );
			
			getpartymember .@party_id;
			for ( .@i = 0; .@i < $@partymembercount; .@i++ ) {
					getitem 41204,1,$@partymemberaid[.@i];
			}
			
			detachrid;
		}
		
		hideoffnpc .@npc_name$;
		'ladder_level++;
		
		//mapannounce .@map$,"[Elite MVP Ladder] next round start in 15 seconds.",bc_map;
		//sleep 10000;
		mapannounce .@map$,"[Elite MVP Ladder] next round start in 5 seconds.",bc_map;
		sleep 5000;
		
		hideonnpc .@npc_name$;
		.@mob_id = elite_mvp( 'ladder_mode,'ladder_level );
		mapannounce .@map$, "spawned "+getmonsterinfo( .@mob_id,MOB_NAME )+"...",bc_all;
		end;
		
	OnFinal:
		.@map$ = strnpcinfo(4);
		.@npc_name$ = strnpcinfo(3);
		
		if ( playerattached() ) {
			.@party_id = getcharid(1);
				
			switch ( 'ladder_mode ) {
				default:
				case 1: .@zeny = 5000000; break;
				case 2: .@zeny = 10000000; break;
				case 3: .@zeny = 15000000; break;
				case 4: .@zeny = 20000000; break;
			}
			.@zeny = ( .@zeny / getmapusers(.@map$  ) );
			party_delay( .@map$,.@party_id,.@zeny );
			detachrid;
		}
		
		//hideoffnpc .@npc_name$;
		sleep2 3000;
		npctalk "Wow, you're actually manage to catch up with my records here.";
		mapannounce .@map$,"[Elite MVP Ladder] The Elite Ladder has been cleared. ",bc_map;
		if ( 'ladder_mode >= 3 )
			announce "Party ["+getpartyname( .@party_id )+"] has completed the Elite MVP Ladder within "+epoch_time_ladder( getnpctimer(0) / 1000 )+".",bc_all,0xFF0000;
		
		
		for ( .@i = 1; .@i <= ( max( 1,'ladder_mode ) * 4 ); .@i++ )
			hideoffnpc instance_npcname( "Treasure#ladder_"+'ladder_mode+"_"+.@i );
			
		'ladder_level = -1;
		stopnpctimer;
		end;
		
	function	elite_mvp	{
		.@mode = getarg( 0,1 );
		.@mode = getarg( 1,1 );
		
		switch ( .@mode ) {
			case 1: 
				.@mob_id = F_Rand( 1115 ); // Eddga
				elite_mvp_skill( .@mob_id,1 );
				break;
			case 2:
				.@mob_id = F_Rand( 1086 ); // Golden Thief Bug
				elite_mvp_skill( .@mob_id,1 );
				break;	
			case 3:
				.@mob_id = F_Rand( 1583 ); // Tao Gunka
				elite_mvp_skill( .@mob_id,1 );
				break;				
			case 4:
				.@mob_id = F_Rand( 1511 ); // Amon Ra
				elite_mvp_skill( .@mob_id,1 );
				break;					
			case 5:
				.@mob_id = F_Rand( 1389 ); // Dracula
				elite_mvp_skill( .@mob_id,1 );
				break;	
			case 6:
				.@mob_id = F_Rand( 1159 ); // Phreeoni
				elite_mvp_skill( .@mob_id,1 );
				break;				
			case 7:
				.@mob_id = F_Rand( 1785 ); // Atroce
				elite_mvp_skill( .@mob_id,1 );
				break;				
			case 8:
				.@mob_id = F_Rand( 1688 ); // Lady Tanee
				elite_mvp_skill( .@mob_id,1 );
				break;				
			case 9:
				.@mob_id = F_Rand( 1059 ); // Mistress
				elite_mvp_skill( .@mob_id,1 );
				break;				
			case 10:
				.@mob_id = F_Rand( 1150 ); // Moonlight Flower
				elite_mvp_skill( .@mob_id,2,532);
				break;
			case 11:
				.@mob_id = F_Rand( 1038 ); // Osiris
				elite_mvp_skill( .@mob_id,2,532);
				break;
			case 12:
				.@mob_id = F_Rand( 1112 ); // Drake
				elite_mvp_skill( .@mob_id,2,532);
				break;
			case 13:
				.@mob_id = F_Rand( 1157 ); // Pharaoh
				elite_mvp_skill( .@mob_id,2,532);
				break;
			case 14:
				.@mob_id = F_Rand( 1252 ); // Hatii
				elite_mvp_skill( .@mob_id,2,532);
				break;
			case 15:
				.@mob_id = F_Rand( 1312 ); // Turtle General
				elite_mvp_skill( .@mob_id,2,532);
				break;
			case 16:
				.@mob_id = F_Rand( 1147 ); // Maya
				elite_mvp_skill( .@mob_id,2,532);
				break;
			case 17:
				.@mob_id = F_Rand( 1885 ); // Gopinch
				elite_mvp_skill( .@mob_id,2,532);
				break;
			case 18:
				.@mob_id = F_Rand( 1046 ); // Dopple
				elite_mvp_skill( .@mob_id,2,532);
				break;
			case 19:
				.@mob_id = F_Rand( 1658 ); // Egnigem Cenia
				elite_mvp_skill( .@mob_id,2,532);
				break;
			case 20:
				.@mob_id = F_Rand( 1734 ); // Kiel-D
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 21:
				.@mob_id = F_Rand( 1087 ); // Orc Hero
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 22:
				.@mob_id = F_Rand( 1418 ); // Evil Snake Lord
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 23:
				.@mob_id = F_Rand( 1492 ); // Samurai Specter
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 24:
				.@mob_id = F_Rand( 1685 ); // Vesper
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 25:
				.@mob_id = F_Rand( 1768 ); // Gloom Under Night
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 26:
				.@mob_id = F_Rand( 1630 ); // White Lady
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 27:
				.@mob_id = F_Rand( 1871 ); // Fallen Bishop
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 28:
				.@mob_id = F_Rand( 1039 ); // Baphomet
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 29:
				.@mob_id = F_Rand( 1272 ); // Dark Lord
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 30:
				.@mob_id = F_Rand( 1719 ); // Detale
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 31:
				.@mob_id = F_Rand( 1832 ); // Ifrit
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 32:
				.@mob_id = F_Rand( 1373 ); // Lord Of The Dead
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 33:
				.@mob_id = F_Rand( 1190 ); // Orc Lord
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 34:
				.@mob_id = F_Rand( 1623 ); // RSX
				elite_mvp_skill( .@mob_id,3,532);
				break;
			case 35:
				.@mob_id = F_Rand( 1251 ); // Stormy Knight	
				elite_mvp_skill( .@mob_id,4,471);
				break;
			case 36:
				.@mob_id = F_Rand( 1751 ); // Valkyrie
				elite_mvp_skill( .@mob_id,4,471);
				break;
			case 37:
				.@mob_id = F_Rand( 1917 ); // Wounded Morroc
				elite_mvp_skill( .@mob_id,4,471);
				break;
			case 38:
				.@mob_id = F_Rand( 1874 ); // Beelzebub
				elite_mvp_skill( .@mob_id,4,471);
				break;
			case 39:
				.@mob_id = F_Rand( 1647 ); // Assasin Cross Eremes
				elite_mvp_skill( .@mob_id,4,471);
				break;
			case 40:
				.@mob_id = F_Rand( 1649 ); // High Priest Margaretha
				elite_mvp_skill( .@mob_id,4,471);
				break;
			case 41:
				.@mob_id = F_Rand( 1651 ); // High Wizard Katherine
				elite_mvp_skill( .@mob_id,4,471);
				break;
			case 42:
				.@mob_id = F_Rand( 1646 ); // Lord Knight Seirin
				elite_mvp_skill( .@mob_id,4,471);
				break;
			case 43:
				.@mob_id = F_Rand( 1648 ); // Master Smith Howart
				elite_mvp_skill( .@mob_id,4,471);
				break;
			case 44:
				.@mob_id = F_Rand( 1650 ); // Sniper Cecil
				elite_mvp_skill( .@mob_id,4,471);
				break;
			case 45:
				.@mob_id = F_Rand( 2237 ); // Professor Celia
				elite_mvp_skill( .@mob_id,6,532,471	);
				break;
			case 46:
				.@mob_id = F_Rand( 2236 ); // Creator Flamel
				elite_mvp_skill( .@mob_id,6,532,471	);
				break;
			case 47:
				.@mob_id = F_Rand( 2238 ); // Champion Chen
				elite_mvp_skill( .@mob_id,6,532,471	);
				break;
			case 48:
				.@mob_id = F_Rand( 2235 ); // Paladin Randel
				elite_mvp_skill( .@mob_id,6,532,471	);
				break;
			case 49:
				.@mob_id = F_Rand( 2240 ); // Clown Alphoccio  
				elite_mvp_skill( .@mob_id,12,532,471,361,349 );
				break;
			case 50:
				.@mob_id = F_Rand( 3074 ); // Time Holder
				elite_mvp_skill( .@mob_id,12,532,471,361,349 );
				break;
		}
		return .@mob_id;
	}
		
		
	function	elite_mvp_skill	{
		.@mob_id = getarg(0);
		.@rate = getarg(1);
		.@getargcount = getargcount();
		
		.@map$ = strnpcinfo(4);
		.@getmapuser = getmapusers( .@map$ );
		
		//.@mobcount = max( 1, (.@getmapuser/.@rate) );
		.@mobcount = 1;
		
		switch ( 'ladder_mode ) {
			default:
			case 1: .@max_level = 10; break;
			case 2: .@max_level = 30; break;
			case 3: .@max_level = 40; break;
			case 4: .@max_level = 50; break;
		}
		
		.@label$ = strnpcinfo(3)+ ( ( 'ladder_level < .@max_level )? "::OnRestart":"::OnFinal" );
		
		while ( .@mobcount >= 1 ) {
			.@gid = monster( .@map$,rand( 92,117 ),rand( 81,109 ),"--ja--",.@mob_id,1,.@label$,2 );
			.@gid = $@mobid[0];
			
			.@mob_hp = getmonsterinfo( .@mob_id,MOB_MAXHP );
			.@total_hp = ( .@mob_hp / 100 ) * ( 100 + ( .@getmapuser * 15 ) );
			
			setunitdata( .@gid,3,max( .@mob_hp,.@total_hp ) );
			setunitdata( .@gid,2,max( .@mob_hp,.@total_hp ) );
			
			.@argcount = 2;
			while ( .@argcount < .@getargcount ) {
				unitskilluseid .@gid,getarg( .@argcount ),10;
				sleep 1000;
				.@argcount++;
			}
			
			.@mobcount--;
		}
		
		if ( .@getargcount > 2 ) {
			mapannounce .@map$,"[Elite MVP Ladder] Level "+'ladder_level+"/"+.@max_level+" !!",bc_map;
		} 
		
		
	}
	
}

1@ldr,30,70,4	duplicate(elite_mvp_ladder_main)	Heroes of MVP Ladder#1	4_F_SURA
2@ldr,30,70,4	duplicate(elite_mvp_ladder_main)	Heroes of MVP Ladder#2	4_F_SURA
3@ldr,30,70,4	duplicate(elite_mvp_ladder_main)	Heroes of MVP Ladder#3	4_F_SURA
4@ldr,30,70,4	duplicate(elite_mvp_ladder_main)	Heroes of MVP Ladder#4	4_F_SURA


-	script	Treasure#ladder_1	4_TREASURE_BOX,{
	if ( 'ladder_level >= 0 ) end;
	
	switch ( 'ladder_mode ) {
		case 2: .@cash = 1; break;
		case 3: .@cash = 2; break;
		case 4: .@cash = 5; break;
		default: break;
	}
	if ( .@cash > 0 && rand(100) < 50 ) {
		dispbottom "[Hidden Treasure] +"+.@cash+" Cash Points";
		#CASHPOINTS += .@cash;
	}
		
	setarray .@item,
		41204,75,
		// F_Rand( 18600,5564,5603,5604,5605,5453,5451,5452,5773,5580,5512,5545,5581,5745,5313,5569,5589,5663,5514,5689,5740,5677,5549,5599 ),15,
		F_Rand( HD_Elunium,HD_Oridecon,HD_Bradium,HD_Carnium ),10,	// refine ore
		F_Rand( 6457,6456,6235,6231,6234,6230,6233,6299 ),5,	// refine ticket
		// F_Rand( Will_Of_Warrior,Blood_Thirst,Goast_Chill ),30,	// bio drop
		//16682,5, 	// Bording Halter
		12210,10, 	// Bubble Gum
		12412,5, 	// HE Bubble Gum
		12208,15, 	// Battle Manual
		14545,5, 	// Field Manual 300
		7621,10,	// Token Of Siegfried
		// 6423,5,	// Sea God's Wrath
		969,50,		// Gold
		969,50,		// Gold
		969,50,		// Gold
		969,50;		// Gold
	.@item_size = getarraysize( .@item ) - 1;
	
	specialeffect EF_COIN;
	getmapxy( .@map$,.@x,.@y,1 );
	.@x1 = .@x - 1;
	.@x2 = .@x + 1;
	.@y1 = .@y - 1;
	.@y2 = .@y + 1;
	for ( .@i = 0; .@i < .@item_size; .@i += 2 ) {
		if ( rand(100) < .@item[.@i+1] )
			makeitem .@item[.@i],1,.@map$,rand( .@x1,.@x2 ),rand( .@y1,.@y2 );
	}
	
	OnInit:
	OnInstanceInit:
		hideonnpc strnpcinfo(3);
		end;
		
	OnEnable:
		hideoffnpc strnpcinfo(3);
		end;
		
}


1@ldr,33,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_1	4_TREASURE_BOX
1@ldr,37,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_2	4_TREASURE_BOX
1@ldr,41,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_3	4_TREASURE_BOX
1@ldr,45,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_4	4_TREASURE_BOX
// 1@ldr,33,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_5	4_TREASURE_BOX
// 1@ldr,37,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_6	4_TREASURE_BOX
// 1@ldr,41,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_7	4_TREASURE_BOX
// 1@ldr,45,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_8	4_TREASURE_BOX
// 1@ldr,33,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_9	4_TREASURE_BOX
// 1@ldr,37,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_10	4_TREASURE_BOX
// 1@ldr,41,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_11	4_TREASURE_BOX
// 1@ldr,45,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_12	4_TREASURE_BOX
// 1@ldr,33,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_13	4_TREASURE_BOX
// 1@ldr,37,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_14	4_TREASURE_BOX
// 1@ldr,41,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_15	4_TREASURE_BOX
// 1@ldr,45,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_1_16	4_TREASURE_BOX

2@ldr,33,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_1	4_TREASURE_BOX
2@ldr,37,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_2	4_TREASURE_BOX
2@ldr,41,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_3	4_TREASURE_BOX
2@ldr,45,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_4	4_TREASURE_BOX
2@ldr,33,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_5	4_TREASURE_BOX
2@ldr,37,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_6	4_TREASURE_BOX
2@ldr,41,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_7	4_TREASURE_BOX
2@ldr,45,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_8	4_TREASURE_BOX
// 2@ldr,33,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_9	4_TREASURE_BOX
// 2@ldr,37,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_10	4_TREASURE_BOX
// 2@ldr,41,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_11	4_TREASURE_BOX
// 2@ldr,45,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_12	4_TREASURE_BOX
// 2@ldr,33,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_13	4_TREASURE_BOX
// 2@ldr,37,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_14	4_TREASURE_BOX
// 2@ldr,41,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_15	4_TREASURE_BOX
// 2@ldr,45,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_2_16	4_TREASURE_BOX

3@ldr,33,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_1	4_TREASURE_BOX
3@ldr,37,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_2	4_TREASURE_BOX
3@ldr,41,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_3	4_TREASURE_BOX
3@ldr,45,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_4	4_TREASURE_BOX
3@ldr,33,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_5	4_TREASURE_BOX
3@ldr,37,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_6	4_TREASURE_BOX
3@ldr,41,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_7	4_TREASURE_BOX
3@ldr,45,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_8	4_TREASURE_BOX
3@ldr,33,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_9	4_TREASURE_BOX
3@ldr,37,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_10	4_TREASURE_BOX
3@ldr,41,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_11	4_TREASURE_BOX
3@ldr,45,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_12	4_TREASURE_BOX
// 3@ldr,33,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_13	4_TREASURE_BOX
// 3@ldr,37,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_14	4_TREASURE_BOX
// 3@ldr,41,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_15	4_TREASURE_BOX
// 3@ldr,45,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_3_16	4_TREASURE_BOX

4@ldr,33,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_1	4_TREASURE_BOX
4@ldr,37,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_2	4_TREASURE_BOX
4@ldr,41,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_3	4_TREASURE_BOX
4@ldr,45,46,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_4	4_TREASURE_BOX
4@ldr,33,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_5	4_TREASURE_BOX
4@ldr,37,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_6	4_TREASURE_BOX
4@ldr,41,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_7	4_TREASURE_BOX
4@ldr,45,42,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_8	4_TREASURE_BOX
4@ldr,33,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_9	4_TREASURE_BOX
4@ldr,37,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_10	4_TREASURE_BOX
4@ldr,41,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_11	4_TREASURE_BOX
4@ldr,45,38,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_12	4_TREASURE_BOX
4@ldr,33,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_13	4_TREASURE_BOX
4@ldr,37,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_14	4_TREASURE_BOX
4@ldr,41,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_15	4_TREASURE_BOX
4@ldr,45,34,4	duplicate(Treasure#ladder_1)	Treasure#ladder_4_16	4_TREASURE_BOX





